#!/usr/bin/env node

(function() {
  var ap, e, file, fs, gi, gitax, json, lib, name, namesfile, path, showUsage, tax_id, _i, _len, _ref;

  path = require('path');

  fs = require('fs');

  lib = path.join(path.dirname(fs.realpathSync(__filename)), '../lib');

  gitax = require(lib + '/gitax.js');

  showUsage = function() {
    return console.error("\n[USAGE]\n\tgitax gi <gi_tax_nucl.dmp> gi [--names names.dmp]\n\n\tgi: NCBI gi(integer)\n\tgi_tax_nucl.dmp: gi_tax data from ftp://ftp.ncbi.nih.gov/pub/taxonomy/\n\t result: tax_id to stdout\n\tnames.dmp: taxonomy_id-name data from ftp://ftp.ncbi.nih.gov/pub/taxonomy/\n\nsetting default files\n  gitax_set <gi_tax_nucl.dmp> gi [--names names.dmp]");
  };

  try {
    ap = require("argparser").vals("names").nums(0).parse();
    try {
      json = require(__dirname + "/../.files.json");
    } catch (_error) {
      e = _error;
      json = {};
    }
    gi = ap.arg(0);
    file = ap.arg(1) || json.gi_tax_nucl;
    namesfile = ap.opt("names") || json.names;
    if (!fs.existsSync(file)) {
      throw {
        message: "file : " + file + ",  no such file."
      };
    }
    if (namesfile && !fs.existsSync(namesfile)) {
      throw {
        message: "namesfile : " + namesfile + ",  no such file."
      };
    }
  } catch (_error) {
    e = _error;
    console.error("[ERROR]: " + e.message);
    showUsage();
    process.exit(1);
  }

  tax_id = gitax(gi, file, namesfile);

  if (tax_id == null) {
    return console.error("not found");
  }

  if (!(namesfile || tax_id.names === null)) {
    return console.log(tax_id);
  }

  _ref = tax_id.names;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    name = _ref[_i];
    console.log([tax_id.tax_id, name.name || "*", name.uniq_name || "*", name.name_class || "*"].join("\t"));
  }

}).call(this);
